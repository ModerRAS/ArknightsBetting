name: Publish .NET Desktop App

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-publish:
    runs-on: windows-latest # 根据你的目标平台选择合适的 runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish
        run: dotnet publish -c Release -r win-x64 --self-contained true # 根据你的目标平台调整

      - name: Package application
        shell: pwsh
        run: |
          cd ${{ github.workspace }}\ArknightsBetting.Avalonia\bin\Release\net8.0\win-x64\publish\
          Compress-Archive -Path ".\*" -DestinationPath "${{ github.workspace }}\pre-release.zip"

      - name: Create GitHub Pre-Release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const now = new Date();
            const timestamp = `${now.getFullYear()}.${now.getMonth() + 1}.${now.getDate()}-${now.getHours()}.${now.getMinutes()}.${now.getSeconds()}`;
            const tagName = `pre-release-${timestamp}-${context.sha.substring(0, 7)}`; // 包含时间戳和短 SHA
            const releaseName = `Pre-release ${timestamp}`;

            const { data: release } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tagName,
              name: releaseName,
              body: `自动构建的预发布版本 ${tagName}`,
              draft: false,
              prerelease: true // 设置为预发布
            });
            console.log(`Created pre-release ${release.html_url}`);
            core.setOutput('upload_url', release.upload_url);

      - name: Upload Pre-Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.github-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/pre-release.zip
          asset_name: ${{ github.event.repository.name }}-win-x64-pre-release-${{ steps.github-release.outputs.release_id }}.zip
          asset_content_type: application/zip